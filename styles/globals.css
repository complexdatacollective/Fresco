@import 'tailwindcss';

@plugin '@tailwindcss/forms';
@plugin '@tailwindcss/aspect-ratio';
@plugin '@tailwindcss/container-queries';
@plugin 'tailwindcss-animate';
@plugin '@tailwindcss/typography';

@theme {
  --color-*: initial;
  --color-neon-coral: hsl(var(--neon-coral));
  --color-neon-coral-dark: hsl(var(--neon-coral--dark));

  --color-sea-green: hsl(var(--sea-green));
  --color-sea-green-dark: hsl(var(--sea-green--dark));

  --color-slate-blue: hsl(var(--slate-blue));
  --color-slate-blue-dark: hsl(var(--slate-blue--dark));

  --color-navy-taupe: hsl(var(--navy-taupe));
  --color-navy-taupe-dark: hsl(var(--navy-taupe--dark));

  --color-cyber-grape: hsl(var(--cyber-grape));
  --color-cyber-grape-dark: hsl(var(--cyber-grape--dark));

  --color-mustard: hsl(var(--mustard));
  --color-mustard-dark: hsl(var(--mustard--dark));

  --color-rich-black: hsl(var(--rich-black));
  --color-rich-black-dark: hsl(var(--rich-black--dark));

  --color-charcoal: hsl(var(--charcoal));
  --color-charcoal-dark: hsl(var(--charcoal--dark));

  --color-platinum: hsl(var(--platinum));
  --color-platinum-dark: hsl(var(--platinum--dark));

  --color-sea-serpent: hsl(var(--sea-serpent));
  --color-sea-serpent-dark: hsl(var(--sea-serpent--dark));

  --color-purple-pizazz: hsl(var(--purple-pizazz));
  --color-purple-pizazz-dark: hsl(var(--purple-pizazz--dark));

  --color-paradise-pink: hsl(var(--paradise-pink));
  --color-paradise-pink-dark: hsl(var(--paradise-pink--dark));

  --color-cerulean-blue: hsl(var(--cerulean-blue));
  --color-cerulean-blue-dark: hsl(var(--cerulean-blue--dark));

  --color-kiwi: hsl(var(--kiwi));
  --color-kiwi-dark: hsl(var(--kiwi--dark));

  --color-neon-carrot: hsl(var(--neon-carrot));
  --color-neon-carrot-dark: hsl(var(--neon-carrot--dark));

  --color-barbie-pink: hsl(var(--barbie-pink));
  --color-barbie-pink-dark: hsl(var(--barbie-pink--dark));

  --color-tomato: hsl(var(--tomato));
  --color-tomato-dark: hsl(var(--tomato--dark));

  --color-transparent: transparent;
  --color-white: hsl(var(--white));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-success: hsl(var(--success));
  --color-success-foreground: hsl(var(--success-foreground));

  --color-info: hsl(var(--info));
  --color-info-foreground: hsl(var(--info-foreground));

  --color-warning: hsl(var(--warning));
  --color-warning-foreground: hsl(var(--warning-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-panel: hsl(var(--panel));
  --color-panel-foreground: hsl(var(--foreground));

  --color-input: hsl(var(--input));
  --color-input-foreground: hsl(var(--input-foreground));

  --color-border: hsl(var(--border));
  --color-link: hsl(var(--link));

  /* interviewer - node sequence colors */
  --node-color-seq-1: var(--color-neon-coral);
  --node-color-seq-1-dark: var(--color-neon-coral-dark);
  --node-color-seq-2: var(--color-sea-serpent);
  --node-color-seq-2-dark: var(--color-sea-serpent-dark);
  --node-color-seq-3: var(--color-purple-pizazz);
  --node-color-seq-3-dark: var(--color-purple-pizazz-dark);
  --node-color-seq-4: var(--color-neon-carrot);
  --node-color-seq-4-dark: var(--color-neon-carrot-dark);
  --node-color-seq-5: var(--color-kiwi);
  --node-color-seq-5-dark: var(--color-kiwi-dark);
  --node-color-seq-6: var(--color-cerulean-blue);
  --node-color-seq-6-dark: var(--color-cerulean-blue-dark);
  --node-color-seq-7: var(--color-paradise-pink);
  --node-color-seq-7-dark: var(--color-paradise-pink-dark);
  --node-color-seq-8: var(--color-mustard);
  --node-color-seq-8-dark: var(--color-mustard-dark);

  /* edge sequence colors */
  --edge-color-seq-1: var(--color-mustard);
  --edge-color-seq-1-dark: var(--color-mustard-dark);
  --edge-color-seq-2: var(--color-neon-coral);
  --edge-color-seq-2-dark: var(--color-neon-coral-dark);
  --edge-color-seq-3: var(--color-kiwi);
  --edge-color-seq-3-dark: var(--color-kiwi-dark);
  --edge-color-seq-4: var(--color-paradise-pink);
  --edge-color-seq-4-dark: var(--color-paradise-pink-dark);
  --edge-color-seq-5: var(--color-tomato);
  --edge-color-seq-5-dark: var(--color-tomato-dark);
  --edge-color-seq-6: var(--color-sea-serpent);
  --edge-color-seq-6-dark: var(--color-sea-serpent-dark);
  --edge-color-seq-7: var(--color-slate-blue);
  --edge-color-seq-7-dark: var(--color-slate-blue-dark);
  --edge-color-seq-8: var(--color-sea-green);
  --edge-color-seq-8-dark: var(--color-sea-green-dark);
  --edge-color-seq-9: var(--color-cerulean-blue);
  --edge-color-seq-9-dark: var(--color-cerulean-blue-dark);

  --radius-*: initial;
  --radius-none: 0px;
  --radius-sm: 0.125rem;
  --radius: 0.25rem;
  --radius-md: 0.375rem;
  --radius-lg: 0.5rem;
  --radius-xl: 0.75rem;
  --radius-2xl: 1rem;
  --radius-3xl: 1.5rem;
  --radius-full: 9999px;
  --radius-input: 0.75rem;

  --animate-wiggle: wiggle 1s ease-in-out infinite;
  --animate-shake: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-indeterminate-progress-bar: indeterminate-progress-bar 1s infinite
    linear;
  --animate-background-gradient: background-gradient 5s infinite ease-in-out;

  --transform-origin-left-right: 0% 50%;

  @keyframes wiggle {
    0%,
    100% {
      transform: rotate(-3deg);
    }
    50% {
      transform: rotate(3deg);
    }
  }
  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
  @keyframes indeterminate-progress-bar {
    0% {
      transform: translateX(0) scaleX(0);
    }
    40% {
      transform: translateX(0) scaleX(0.4);
    }
    100% {
      transform: translateX(100%) scaleX(0.5);
    }
  }
  @keyframes background-gradient {
    0%,
    50% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
  @keyframes shake {
    10%,
    90% {
      transform: translate3d(-1px, 0, 0);
    }
    20%,
    80% {
      transform: translate3d(2px, 0, 0);
    }
    30%,
    50%,
    70% {
      transform: translate3d(-4px, 0, 0);
    }
    40%,
    60% {
      transform: translate3d(4px, 0, 0);
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-platinum-dark, currentColor);
  }
}

@layer base {
  :root {
    /* UI Colors */
    /* To generate dark color variants, subtract 5% from the lightness. */
    --dark-mod: 5%;
    --neon-coral-hue: 342;
    --neon-coral-saturation: 76.9%;
    --neon-coral-lightness: 50.8%;
    --neon-coral: var(--neon-coral-hue) var(--neon-coral-saturation)
      var(--neon-coral-lightness);
    --neon-coral--dark: var(--neon-coral-hue) var(--neon-coral-saturation)
      calc(var(--neon-coral-lightness) - var(--dark-mod));

    --mustard-hue: 46;
    --mustard-saturation: 100%;
    --mustard-lightness: 47%;
    --mustard: var(--mustard-hue) var(--mustard-saturation)
      var(--mustard-lightness);
    --mustard--dark: var(--mustard-hue) var(--mustard-saturation)
      calc(var(--mustard-lightness) - var(--dark-mod));

    --sea-green-hue: 168;
    --sea-green-saturation: 100%;
    --sea-green-lightness: 35%;
    --sea-green: var(--sea-green-hue) var(--sea-green-saturation)
      var(--sea-green-lightness);
    --sea-green--dark: var(--sea-green-hue) var(--sea-green-saturation)
      calc(var(--sea-green-lightness) - var(--dark-mod));

    --slate-blue-hue: 237;
    --slate-blue-saturation: 79%;
    --slate-blue-lightness: 65%;
    --slate-blue: var(--slate-blue-hue) var(--slate-blue-saturation)
      var(--slate-blue-lightness);
    --slate-blue--dark: var(--slate-blue-hue) var(--slate-blue-saturation)
      calc(var(--slate-blue-lightness) - var(--dark-mod));

    --navy-taupe-hue: 248;
    --navy-taupe-saturation: 34%;
    --navy-taupe-lightness: 25%;
    --navy-taupe: var(--navy-taupe-hue) var(--navy-taupe-saturation)
      var(--navy-taupe-lightness);
    --navy-taupe--dark: var(--navy-taupe-hue) var(--navy-taupe-saturation)
      calc(var(--navy-taupe-lightness) - var(--dark-mod));

    --cyber-grape-hue: 240;
    --cyber-grape-saturation: 33%;
    --cyber-grape-lightness: 29%;
    --cyber-grape: var(--cyber-grape-hue) var(--cyber-grape-saturation)
      var(--cyber-grape-lightness);
    --cyber-grape--dark: var(--cyber-grape-hue) var(--cyber-grape-saturation)
      calc(var(--cyber-grape-lightness) - var(--dark-mod));

    --rich-black-hue: 240;
    --rich-black-saturation: 35%;
    --rich-black-lightness: 10%;
    --rich-black: var(--rich-black-hue) var(--rich-black-saturation)
      var(--rich-black-lightness);

    --charcoal-hue: 231;
    --charcoal-saturation: 4%;
    --charcoal-lightness: 43%;
    --charcoal: var(--charcoal-hue) var(--charcoal-saturation)
      var(--charcoal-lightness);

    --platinum-hue: 210;
    --platinum-saturation: 43%;
    --platinum-lightness: 95%;
    --platinum: var(--platinum-hue) var(--platinum-saturation)
      var(--platinum-lightness);
    --platinum--dark: var(--platinum-hue) var(--platinum-saturation)
      calc(var(--platinum-lightness) - var(--dark-mod));

    --sea-serpent-hue: 190;
    --sea-serpent-saturation: 87%;
    --sea-serpent-lightness: 47%;
    --sea-serpent: var(--sea-serpent-hue) var(--sea-serpent-saturation)
      var(--sea-serpent-lightness);
    --sea-serpent--dark: var(--sea-serpent-hue) var(--sea-serpent-saturation)
      calc(var(--sea-serpent-lightness) - var(--dark-mod));

    --purple-pizazz-hue: 291;
    --purple-pizazz-saturation: 86%;
    --purple-pizazz-lightness: 52%;
    --purple-pizazz: var(--purple-pizazz-hue) var(--purple-pizazz-saturation)
      var(--purple-pizazz-lightness);
    --purple-pizazz--dark: var(--purple-pizazz-hue)
      var(--purple-pizazz-saturation)
      calc(var(--purple-pizazz-lightness) - var(--dark-mod));

    --paradise-pink-hue: 331;
    --paradise-pink-saturation: 100%;
    --paradise-pink-lightness: 57%;
    --paradise-pink: var(--paradise-pink-hue) var(--paradise-pink-saturation)
      var(--paradise-pink-lightness);
    --paradise-pink--dark: var(--paradise-pink-hue)
      var(--paradise-pink-saturation)
      calc(var(--paradise-pink-lightness) - var(--dark-mod));

    --cerulean-blue-hue: 216;
    --cerulean-blue-saturation: 100%;
    --cerulean-blue-lightness: 53%;
    --cerulean-blue: var(--cerulean-blue-hue) var(--cerulean-blue-saturation)
      var(--cerulean-blue-lightness);
    --cerulean-blue--dark: var(--cerulean-blue-hue)
      var(--cerulean-blue-saturation)
      calc(var(--cerulean-blue-lightness) - var(--dark-mod));

    --kiwi-hue: 103;
    --kiwi-saturation: 46%;
    --kiwi-lightness: 56%;
    --kiwi: var(--kiwi-hue) var(--kiwi-saturation) var(--kiwi-lightness);
    --kiwi--dark: var(--kiwi-hue) var(--kiwi-saturation)
      calc(var(--kiwi-lightness) - var(--dark-mod));

    --neon-carrot-hue: 32;
    --neon-carrot-saturation: 92%;
    --neon-carrot-lightness: 52%;
    --neon-carrot: var(--neon-carrot-hue) var(--neon-carrot-saturation)
      var(--neon-carrot-lightness);
    --neon-carrot--dark: var(--neon-carrot-hue) var(--neon-carrot-saturation)
      calc(var(--neon-carrot-lightness) - var(--dark-mod));

    --barbie-pink-hue: 328;
    --barbie-pink-saturation: 100%;
    --barbie-pink-lightness: 47%;
    --barbie-pink: var(--barbie-pink-hue) var(--barbie-pink-saturation)
      var(--barbie-pink-lightness);
    --barbie-pink--dark: var(--barbie-pink-hue) var(--barbie-pink-saturation)
      calc(var(--barbie-pink-lightness) - var(--dark-mod));

    --tomato-hue: 356;
    --tomato-saturation: 77%;
    --tomato-lightness: 54%;
    --tomato: var(--tomato-hue) var(--tomato-saturation) var(--tomato-lightness);
    --tomato--dark: var(--tomato-hue) var(--tomato-saturation)
      calc(var(--tomato-lightness) - var(--dark-mod));

    --white: 0 0% 100%;

    /* Semantic slots */
    --background: var(--platinum);
    --foreground: var(--cyber-grape);

    --primary: var(--cyber-grape);
    --primary-foreground: var(--white);

    --secondary: var(--neon-coral);
    --secondary-foreground: var(--white);

    --muted: var(--platinum);
    --muted-foreground: var(--cyber-grape-hue)
      calc(var(--cyber-grape-saturation) - 10%)
      calc(var(--cyber-grape-lightness) - 10%);

    --accent: var(--slate-blue);
    --accent-foreground: var(--white);

    --destructive: var(--tomato);
    --destructive-foreground: var(--white);

    --warning: var(--neon-carrot);
    --warning-foreground: var(--white);

    --info: var(--cerulean-blue);
    --info-foreground: var(--white);

    --success: var(--sea-green);
    --success-foreground: var(--white);

    --border: var(--platinum--dark);

    --link: var(--neon-coral);

    --card: 0 0% 100%;

    --panel: var(--platinum);

    --input: 0 0% 100%;
    --input-foreground: var(--cyber-grape);

    --popover: var(--white);
    --popover-foreground: var(--foreground);
  }
}

@layer base {
  body {
    @apply bg-background text-foreground;
    font-family: 'Open Sans', sans-serif;
  }

  /* These two tags are semantic, so I think its okay to apply styles to them directly in the global styles. */
  strong {
    @apply font-extrabold;
  }

  em {
    @apply italic;
  }
}
