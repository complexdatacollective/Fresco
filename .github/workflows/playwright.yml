name: Playwright Tests

on:
  push:
    branches: [next]
  pull_request:
    branches: [next]
  workflow_dispatch: # Allows manual triggering of the workflow

permissions:
  contents: read

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check if Playwright is installed
        id: check-playwright
        run: |
          if pnpm list @playwright/test --depth=0 2>/dev/null | grep -q "@playwright/test"; then
            echo "playwright_installed=true" >> $GITHUB_OUTPUT
          else
            echo "playwright_installed=false" >> $GITHUB_OUTPUT
            echo "::notice::Playwright is not installed in this branch. Skipping tests."
          fi

      - name: Install Playwright Browsers
        if: steps.check-playwright.outputs.playwright_installed == 'true'
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        if: steps.check-playwright.outputs.playwright_installed == 'true'
        run: pnpm exec playwright test
        env:
          CI: true

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always() && steps.check-playwright.outputs.playwright_installed == 'true'
        with:
          name: playwright-report
          path: tests/e2e/playwright-report/
          retention-days: 30

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always() && steps.check-playwright.outputs.playwright_installed == 'true'
        with:
          name: test-results
          path: tests/e2e/test-results/
          retention-days: 30
